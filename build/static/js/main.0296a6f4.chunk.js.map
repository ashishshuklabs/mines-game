{"version":3,"sources":["assets/idle.png","assets/cashout.png","assets/busted.png","assets/index.tsx","Intructions.tsx","api.ts","state/context/GameContext.tsx","styles/GlobalSyle.tsx","styles/globalVariables.ts","components/tile/Tile.tsx","components/tile/Tiles.tsx","components/board/Board.tsx","components/form/button/OutlinedButton.tsx","Game.tsx","App.tsx","index.tsx"],"names":["module","exports","Gem","props","viewBox","width","height","id","data-name","d","fill","className","Mine","cx","cy","rx","ry","transform","StyledInstruction","styled","div","steps","alt","src","idle","busted","cashout","style","marginLeft","href","target","rel","Instructions","React","useState","step","setStep","onClick","s","disabled","length","wait","Promise","resolve","setTimeout","Math","random","gameState","minesCount","mines","gems","revealedTiles","state","minesFields","_","range","minesBet","a","newRoundTiles","shuffle","slice","getGameState","minesNext","tileToReveal","push","includes","minesCashout","GameContext","createContext","onBet","onNext","onCashout","useGameContext","useContext","GameProvider","children","minesData","setMinesData","data","console","log","tileId","Provider","value","createGlobalStyle","designVariables","transition","palette","light100","light200","light300","dark200","dark300","dark400","dark600","dark700","dark800","dark900","red100","red200","green100","blue800","green700","Tile","setShow","StyledTile","toString","e","reveal","clear","mine","find","t","opacity","background","Tiles","handleClick","StyledTiles","tileArray","i","count","tileItem","key","renderTiles","article","Board","tileWidth","boardWidth","gridMatrix","tileCount","disable","StyledBoard","section","pointerEvents","OutlinedButton","StyledButton","buttonStyle","color","hoverColor","disabledColor","title","button","Game","loading","setLoading","action","setAction","useEffect","disableCashout","StyledDiv","App","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.0296a6f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/idle.daf33add.png\";","module.exports = __webpack_public_path__ + \"static/media/cashout.0a21e2f6.png\";","module.exports = __webpack_public_path__ + \"static/media/busted.e13c877d.png\";","import React from \"react\";\n\nexport const Gem = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 76.61 70\" width=\"1em\" height=\"1em\" {...props}>\n    <defs>\n      <style>\n        {\".prefix__cls-6{fill:#09fd02}.prefix__cls-9{fill:#57fd7f}\"}\n      </style>\n    </defs>\n    <title>{\"3Artboard 710\"}</title>\n    <g id=\"prefix__Layer_1\" data-name=\"Layer 1\">\n      <path\n        d=\"M38 70a2.75 2.75 0 01-2-.92L.7 29.62a2.76 2.76 0 01-.31-3.25L11 8.55a2.76 2.76 0 011.27-1.12l10.85-4.72a2.77 2.77 0 01.62-.19l14-2.52a3.09 3.09 0 011 0l13.88 2.52a3.38 3.38 0 01.62.18l11.18 4.88h.13a2.69 2.69 0 01.65.45 3 3 0 01.4.47l.09.14L76.23 26.6a2.73 2.73 0 01-.34 3.25L40.06 69.1A2.76 2.76 0 0138 70z\"\n        fill=\"#051d27\"\n      />\n      <path\n        d=\"M22.13 18.75c-2.64 7-1.74 13.65 2.09 20 6.74-3.1 11.83-8.4 14.44-17-5.66-2.82-11.17-4.01-16.53-3z\"\n        fill=\"#06e403\"\n      />\n      <path\n        d=\"M73.86 28L63.33 10.1c-6.26 1.19-8.79 4.41-9 8.91C58.67 25.3 65.39 28 73.86 28z\"\n        fill=\"#05a902\"\n      />\n      <path\n        d=\"M38.49 21.94c.15 7.77 4.2 13.31 12.19 16.57h.07c4.5-5.59 5.9-12 3.62-19.47-6.11-2.96-11.47-2.32-15.88 2.9z\"\n        fill=\"#01e501\"\n      />\n      <path d=\"M24.22 38.76q13.19 6.43 26.46-.25L38.49 21.94z\" fill=\"#00d503\" />\n      <path\n        className=\"prefix__cls-6\"\n        d=\"M24.22 38.76c1 9.17 6.29 18.72 13.81 28.49 7.4-9 12.5-18.4 12.72-28.77z\"\n      />\n      <path\n        d=\"M50.75 38.48L38 67.25 73.86 28c-9.39.32-17.67 2.75-23.11 10.48z\"\n        fill=\"#019902\"\n      />\n      <path\n        d=\"M2.75 27.79L38 67.25 24.22 38.76C20.11 31 11.89 28.8 2.75 27.79z\"\n        fill=\"#01e300\"\n      />\n      <path\n        className=\"prefix__cls-9\"\n        d=\"M13.39 10L2.75 27.79c9.33 1.22 16.19-1.21 19.54-8.88 2.28-5.12-1.07-7.91-8.9-8.91z\"\n      />\n      <path\n        className=\"prefix__cls-6\"\n        d=\"M2.75 27.79l21.47 10.97-1.93-19.85-19.54 8.88z\"\n      />\n      <path\n        className=\"prefix__cls-6\"\n        d=\"M52.14 5.23L38.22 2.75l-14 2.48-10.83 4.73 8.9 8.95 16.2 3.03 15.88-2.93 8.96-8.91-11.19-4.87z\"\n      />\n      <path\n        fill=\"#03be02\"\n        d=\"M50.74 38.48l23.12-10.49-19.49-8.98-3.63 19.47z\"\n      />\n      <path\n        className=\"prefix__cls-9\"\n        d=\"M13.89 10.83l10.48-5.4 13.85-2.68-14 2.48-10.83 4.73.5.87zM22.29 18.91l1.93 19.85-3.12-19.71 1.19-.14z\"\n      />\n      <path\n        className=\"prefix__cls-9\"\n        d=\"M22.29 18.91l16.2 3.03-.46.54-15.74-3.57zM63.33 10.1L53 19.28l1.37-.27 8.96-8.91z\"\n      />\n    </g>\n  </svg>\n);\n\nexport const Mine = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    data-name=\"Layer 1\"\n    viewBox=\"0 0 70 70\"\n    width=\"1em\"\n    height=\"1em\"\n    {...props}\n  >\n    <title>{\"bomb\"}</title>\n    <path\n      d=\"M35 70a35.47 35.47 0 01-8.45-1A35 35 0 1149.83 3.3c3.53-2.25 8.75-.54 12.39 4.16.15.19.3.39.44.59a11.89 11.89 0 013.61 2.31 10.6 10.6 0 013.27 7.91A9 9 0 0168 23.44a32.32 32.32 0 011.14 4A35 35 0 0135 70zm0-63.53a28.57 28.57 0 1027.85 22.37A27.53 27.53 0 0061.34 24a3.17 3.17 0 01-.16-2 3.2 3.2 0 01-1.49-1.33c-.29-.5-.6-1-.92-1.48a3.23 3.23 0 01-.11-3.39.92.92 0 00.06-.29 3.33 3.33 0 01.77-1.79 3.16 3.16 0 01-1.73-1.4 11.43 11.43 0 00-.65-.95c-1.59-2-3.35-2.68-3.87-2.62A1.81 1.81 0 0153 9l-1.37.79a3.22 3.22 0 01-3.14.06A28.47 28.47 0 0035 6.47z\"\n      fill=\"#051d27\"\n    />\n    <path\n      d=\"M66.76 35a31.62 31.62 0 00-.76-6.86c-2.45-.61-13.43-3.53-16.07-3.53-17.55 0-28.75 14.48-28.75 32 0 2.35 5.65 7 6.14 9.19A31.8 31.8 0 0066.76 35z\"\n      fill=\"#d8003e\"\n    />\n    <path\n      d=\"M58.34 27.2a31.72 31.72 0 017.67.94 31.76 31.76 0 10-38.68 37.69 31.77 31.77 0 0131-38.63z\"\n      fill=\"#fd013e\"\n    />\n    <path\n      d=\"M51.33 6.19l-5.62 3.25c-2.24 1.74-1.7 6.17 1.19 9.9S54 24.69 56.19 23l4.55-4.64z\"\n      fill=\"#d8003e\"\n    />\n    <ellipse\n      cx={56.03}\n      cy={12.26}\n      rx={4.6}\n      ry={7.67}\n      transform=\"rotate(-37.78 56.039 12.254)\"\n      fill=\"#fd013e\"\n    />\n    <path\n      d=\"M41.45 38.53a1.55 1.55 0 01-.37 0 1.84 1.84 0 01-1.44-2.17c2-9.64 10.07-12 16-13.71 4.86-1.41 7-2.24 7-4.34a3.76 3.76 0 00-1.11-2.89c-1.91-1.81-5.63-1.67-5.67-1.66a1.84 1.84 0 11-.2-3.68c.22 0 5.33-.25 8.41 2.67a7.43 7.43 0 012.26 5.56c0 5.08-4.9 6.5-9.65 7.88-5.85 1.69-11.9 3.45-13.41 10.9a1.85 1.85 0 01-1.82 1.44z\"\n      fill=\"#2a2f3c\"\n    />\n    <path\n      fill=\"#fff\"\n      d=\"M32.81 53.29l.72 1.3-3.4 2.32.36-3.19 2.32-.43zM20.47 56.89l.26.35-1.06.52.05-.81.75-.06zM32.15 47.91l.11.91.79-.16-.18-1.07-.72.32zM35.28 46.02l-.39 1.71 1.25.21.68-1.07-.43-.96-1.11.11zM38.02 48.47l-.05.81 1.06-.52-.26-.35-.75.06zM41.13 49.33l1.08-.48.5 2.08-1.23.17-.35-1.77zM32.64 39.9l.43.95-.68 1.07-1.25-.21.4-1.71 1.1-.1zM44.43 45.41l.19 1.07-.79.17-.12-.91.72-.33zM47.56 43.79l-.94 1.38 2.89 1.38.44-1.53-2.39-1.23zM52.47 47.67l-.05.81 1.06-.52-.26-.35-.75.06zM51.74 51.27l-.43.96 1.29.96 2.03-1.28-2.89-.64zM51.63 58.46l-.72.32.11.91.8-.16-.19-1.07zM46.62 39.13l.24-2.41 1.9-.27.62 1-2.76 1.68zM61.89 33.9l-.05.81 1.06-.52-.26-.35-.75.06zM47.15 33.15l.58.56-.72.81-.44-.66.58-.71zM36.75 33.83l-1.06.51.04-.81.75-.06.27.36zM35.78 37.44l-.73.33.12.9.79-.16-.18-1.07zM33.78 34.62L33 35.77l-1.27-.36-.48-1.51 1.21-1.03 1.32 1.75zM28.58 24.4l.18 1.06-.79.17-.12-.91.73-.32z\"\n    />\n    <path\n      fill=\"#fdcb02\"\n      d=\"M47 26.82l-3.2 13.61-9.57-13.61 7.45 14.66-10.64-3.14 6.38 4.19-18.09 5.23 20.22-3.14-3.19 10.47 6.38-7.33L47 51.95v-5.23l14.89 3.14-13.83-6.29 7.45-5.23L47 41.48V26.82z\"\n    />\n    <path\n      fill=\"#fdcb02\"\n      d=\"M56.57 43.61l7.1-1.77v1.77h-7.1zM32.63 33.01l-6.2-10.61-.89 2.65 7.09 7.96zM34.41 52.44l-6.21 10.6-.89-2.65 7.1-7.95z\"\n    />\n    <path\n      fill=\"#fff\"\n      d=\"M46.93 44.58l5.26 6.65L44.6 47l-2.34 5.44-1.17-4.23-7.99 2.2 5.07-5.83-5.25-2.42 5.25-1.81-1.75-2.41 4.67.6-1.17-9.07 3.51 9.07 1.17-.6v1.81l5.25-2.42-2.92 4.83 6.43.61-6.43 1.81z\"\n    />\n  </svg>\n);\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nimport { Gem, Mine } from \"./assets\";\n\nimport idle from \"./assets/idle.png\";\nimport cashout from \"./assets/cashout.png\";\nimport busted from \"./assets/busted.png\";\n\nconst StyledInstruction = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1em 2em;\n  background: papayawhip;\n  border: 3px solid #ffdba5;\n  border-radius: 0.5em;\n  margin-bottom: 1em;\n\n  > h2 {\n    > * + * {\n      margin-left: 0.5em;\n    }\n  }\n`;\n\nconst steps = [\n  <div>\n    <p>Mines game is a 5 to 5 grid game (5 columns, 5 rows)</p>\n    <img width=\"200\" alt=\"idle\" src={idle} />\n  </div>,\n  <div>\n    <p>\n      Once a mine is revealed game ends, if it's a gem (not a mine) game\n      continues. Following screenshot is a game that ended (due to clicking on\n      mine). You can differentiate between gems & mines that got revealed.\n    </p>\n    <img width=\"200\" alt=\"busted\" src={busted} />\n  </div>,\n  <div>\n    <p>\n      You can cashout at any time and the game state will be revealed. Don't\n      implement 1.29x payout image.\n    </p>\n    <img width=\"200\" alt=\"cashout\" src={cashout} />\n  </div>,\n  <div>\n    <p>\n      Create \"Bet\" button (possible to click at all times except \"progress\" and\n      loading state)\n    </p>\n    <button>Bet</button>\n  </div>,\n  <div>\n    <p>\n      Create \"Cashout\" button (only possible to click on cashout if you are in\n      the middle of the game state \"progress\" and you have revealed at least of\n      the tiles and you are not waiting for a server response (eg. to reveal\n      next tile))\n    </p>\n    <button>Cashout</button>\n  </div>,\n  <div>\n    <p>\n      As any real world application the game has asynchronous calls, make sure\n      you handle loading states appropriately\n    </p>\n  </div>,\n  <div>\n    <p>USE \"assets\" folder to get gem and mine image.</p>\n    <div>\n      <Gem />\n      <Mine style={{ marginLeft: \"0.5em\" }} />\n    </div>\n  </div>,\n  <div>\n    <p>\n      USE \"api.ts\" file to call external api. We have three mutations available,\n      you will need to use them all.\n    </p>\n  </div>,\n  <div>\n    <p>\n      Play a sound when mine or gem is revealed. Use gem.mp3 and mine.mp3 from\n      assets.\n    </p>\n  </div>,\n  <div>\n    <p>\n      By default game has a 5 mines (if you can make it possible to play with\n      more it's a plus, but not mandatory)\n    </p>\n  </div>,\n  <div>\n    <p>\n      Try to focus on great user experience and add some animations that make\n      the game exciting\n    </p>\n  </div>,\n  <div>\n    <p>\n      You can try to play mines on{\" \"}\n      <a\n        href=\"https://parmaday.club/casino/games/mines\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Stake\n      </a>\n      &nbsp;staging environment (feel free to create a new user) and get an idea\n      how the game works\n    </p>\n  </div>\n];\n\nconst Instructions = () => {\n  const [step, setStep] = React.useState(0);\n\n  const toNext = () => setStep((s) => s + 1);\n  const toPrevious = () => setStep((s) => s - 1);\n  return (\n    <StyledInstruction>\n      <h2>\n        <Gem />\n        <span>Mines</span>\n        <Mine />\n      </h2>\n      <div>\n        <button onClick={toPrevious} disabled={step === 0}>\n          Previous\n        </button>\n        <button onClick={toNext} disabled={step === steps.length - 1}>\n          Next\n        </button>\n      </div>\n      {steps[step]}\n    </StyledInstruction>\n  );\n};\n\nexport default Instructions;\n","// following API - this is how to not write an API\nimport _ from \"lodash\";\n\nexport type State = \"idle\" | \"progress\" | \"cashout\" | \"busted\";\n\nexport type CasinoGameMines = {\n  minesCount: number;\n  mines: number[];\n  revealedTiles: number[];\n  gems:number[];\n  state: State;\n};\n\nexport const wait = () =>\n  new Promise<void>((resolve) =>\n    setTimeout(resolve, Math.random() * 500 + 200)\n  );\n\nexport const gameState: CasinoGameMines = {\n  minesCount: 5,\n  mines: [],\n  gems:[],\n  revealedTiles: [],\n  state: \"idle\",\n};\n\nconst minesFields = _.range(0, 25);\n\nexport const minesBet = async () => {\n  await wait();\n\n  const newRoundTiles = _.shuffle(minesFields);\n  gameState.mines = newRoundTiles.slice(0, 5);\n  gameState.revealedTiles = [];\n  return getGameState(\"progress\");\n};\n\nexport const minesNext = async (tileToReveal: number) => {\n  await wait();\n\n  gameState.revealedTiles.push(tileToReveal);\n\n  if (gameState.mines.includes(tileToReveal)) {\n    return getGameState(\"busted\");\n  }\n\n  return getGameState(\"progress\");\n};\n\nconst getGameState = (state: State) => {\n  gameState.state = state;\n\n  // if (state === \"busted\") {\n  //   return { ...gameState, mines: [] };\n  // }\n  // if (state === \"cashout\") {\n  //   return { ...gameState, revealedTiles: [] };\n  // }\n\n  return gameState;\n};\n\nexport const minesCashout = async () => {\n  await wait();\n\n  return getGameState(\"cashout\");\n};\n","import React, { useContext, createContext, useState } from \"react\";\r\nimport {\r\n  CasinoGameMines,\r\n  gameState,\r\n  minesNext,\r\n  minesBet,\r\n  minesCashout,\r\n} from \"../../api\";\r\n\r\ntype DispatchType = {\r\n  onBet: () => void;\r\n  onNext: (tileId: number) => void;\r\n  onCashout: () => void;\r\n};\r\ntype ContextType = CasinoGameMines & DispatchType;\r\nconst GameContext = createContext<ContextType>({\r\n  ...gameState,\r\n  onBet: () => {},\r\n  onNext: () => {},\r\n  onCashout: () => {},\r\n});\r\n\r\nexport const useGameContext = () => useContext(GameContext);\r\n\r\nexport const GameProvider: React.FC = ({ children }) => {\r\n  const [minesData, setMinesData] = useState<CasinoGameMines>(gameState);\r\n\r\n  const onBet = async () => {\r\n    const data = await minesBet();\r\n    console.log(\"Inside context\", data);\r\n    setMinesData({ ...minesData, ...data });\r\n  };\r\n  const onNext = async (tileId: number) => {\r\n    const data = await minesNext(tileId);\r\n    setMinesData({ ...minesData, ...data });\r\n  };\r\n  const onCashout = async () => {\r\n    const data = await minesCashout();\r\n    setMinesData({ ...minesData, ...data });\r\n  };\r\n  return (\r\n    <GameContext.Provider value={{ ...minesData, onBet, onNext, onCashout }}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\ninterface Colors {\r\n  light100: string;\r\n  light300: string;\r\n  light200: string;\r\n  dark200: string;\r\n  dark300: string;\r\n  dark400: string;\r\n  dark600: string;\r\n  dark700: string;\r\n  dark800: string;\r\n  dark900: string;\r\n  red100: string;\r\n  red200: string;\r\n  blue800: string;\r\n  green100: string;\r\n  green700: string;\r\n}\r\n/* Default colors */\r\nexport const colors: Colors = {\r\n  light100: \"#ffffff\",\r\n  light200: \"#F3F3F3\",\r\n  light300: \"#E5E5E5 \",\r\n  dark200: \"#557086\",\r\n  dark300: \"#58595b\",\r\n  dark400: \"#424B5A\",\r\n  dark600: \"#252932\",\r\n  dark700: \"#363636\",\r\n  dark800: \"#050D1D\",\r\n  dark900: \"#0D0D0D\",\r\n  red100: \"#E11837\",\r\n  red200: \"#B30E27\",\r\n  green100: \"#00e701\",\r\n  blue800: \"#0202f3ea\",\r\n  green700: \"#1fff20\",\r\n} as const;\r\n\r\nexport default createGlobalStyle`\r\n :root {\r\n  --font-family: sans-serif;\r\n  --transition: all .3s ease-out;\r\n  --spacing: \".25rem\";\r\n  --radius: \"1rem\"; \r\n}\r\n*,*::before,*::after {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody{\r\n  font-family: var(--font-family);\r\n  line-height: 1.5;\r\n  \r\n}\r\n\r\n\r\n\r\n`;\r\n","import { colors } from \"./GlobalSyle\";\r\n\r\nexport const designVariables = {\r\n  transition: \"var(--transition)\",\r\n  palette: { ...colors },\r\n};\r\n","import React, { MouseEvent } from \"react\";\r\nimport { Gem, Mine } from \"src/assets\";\r\nimport { useGameContext } from \"src/state/context/GameContext\";\r\nimport styled from \"styled-components\";\r\nimport { designVariables } from \"../../styles/globalVariables\";\r\ninterface TileProps {\r\n  width: number;\r\n  onClick?: (id: number) => void;\r\n  id: number;\r\n  mine?: boolean;\r\n  reveal: boolean;\r\n  clear: boolean;\r\n}\r\nexport const Tile = (props: TileProps) => {\r\n  const [show, setShow] = React.useState<string>(\"\");\r\n  const { revealedTiles } = useGameContext();\r\n  const handleClick = (e: MouseEvent, id: number) => {\r\n    if (props.onClick) {\r\n      props.onClick(id);\r\n    }\r\n    setShow(\"show\");\r\n  };\r\n\r\n  return (\r\n    <StyledTile\r\n      id={props.id.toString()}\r\n      width={props.width}\r\n      onClick={(e: MouseEvent) => handleClick(e, props.id)}\r\n      reveal={props.reveal}\r\n      clear={props.clear}\r\n    >\r\n      {!props.mine ? (\r\n        <Gem\r\n          className={revealedTiles.find((t) => t === props.id) ? \"show\" : \"\"}\r\n          width={`${props.width * 0.5}rem`}\r\n          height={`${props.width * 0.5}rem`}\r\n        />\r\n      ) : (\r\n        <Mine\r\n          className={revealedTiles.find((t) => t === props.id) ? \"show\" : \"\"}\r\n          width={`${props.width * 0.5}rem`}\r\n          height={`${props.width * 0.5}rem`}\r\n        />\r\n      )}\r\n    </StyledTile>\r\n  );\r\n};\r\n\r\nconst StyledTile = styled.div<{\r\n  width: number;\r\n  reveal: boolean;\r\n  clear: boolean;\r\n}>`\r\n  width: ${(props) => props.width}rem;\r\n  height: ${(props) => props.width}rem;\r\n  background: ${designVariables.palette.dark400};\r\n  transition: ${designVariables.transition};\r\n  &:hover {\r\n    cursor: pointer;\r\n    background: ${designVariables.palette.dark200};\r\n    transform: translateY(-2px);\r\n  }\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 5px;\r\n  svg {\r\n    opacity: 0;\r\n    transition: ${designVariables.transition};\r\n    &.show {\r\n      opacity: 1;\r\n      background: transparent;\r\n    }\r\n    ${(props) => props.reveal && { opacity: 0.2, background: \"transparent\" }}\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Tile } from \"./Tile\";\r\nimport { useGameContext } from \"../../state/context/GameContext\";\r\n\r\ninterface TilesProps {\r\n  count: number;\r\n  width: number;\r\n}\r\nexport const Tiles = (props: TilesProps) => {\r\n  const {\r\n    revealedTiles = [],\r\n    state,\r\n    onNext,\r\n    minesCount,\r\n    mines,\r\n  } = useGameContext();\r\n  const handleClick = (id: number) => {\r\n    if (onNext) {\r\n      onNext(id);\r\n    }\r\n  };\r\n  // console.log(revealedTiles, minesCount);\r\n  const renderTiles = () => {\r\n    const tileArray: React.ReactNode[] = [];\r\n    for (let i = 0; i < props.count; i++) {\r\n      // console.log(\"is this mine??\", mines, mines?.includes(i));\r\n      const tileItem = (\r\n        <Tile\r\n          mine={mines?.includes(i) || false}\r\n          key={i}\r\n          width={props.width}\r\n          id={i}\r\n          reveal={state === \"cashout\" || state === \"busted\"}\r\n          clear={revealedTiles.length === 0}\r\n          onClick={handleClick}\r\n        />\r\n      );\r\n      tileArray.push(tileItem);\r\n    }\r\n    return tileArray;\r\n  };\r\n  return <StyledTiles>{renderTiles()}</StyledTiles>;\r\n};\r\n\r\nconst StyledTiles = styled.article`\r\n  width: 90%;\r\n  height: 90%;\r\n  padding: 1rem;\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-gap: 5px;\r\n`;\r\n","import React from \"react\";\r\nimport { Tiles } from \"../tile/Tiles\";\r\nimport styled from \"styled-components\";\r\nimport { designVariables } from \"src/styles/globalVariables\";\r\nimport { useGameContext } from \"src/state/context/GameContext\";\r\ninterface BoardProps {\r\n  boardWidth: number;\r\n  gridMatrix: number;\r\n}\r\nexport const Board = (props: BoardProps) => {\r\n  const tileWidth = props.boardWidth / props.gridMatrix;\r\n  const tileCount = props.gridMatrix * props.gridMatrix;\r\n  const { minesCount, mines, state } = useGameContext();\r\n  console.log(minesCount, mines);\r\n  const disable = state === \"busted\" || state === \"idle\";\r\n  return (\r\n    <StyledBoard disabled={disable} boardWidth={props.boardWidth}>\r\n      <Tiles count={tileCount} width={tileWidth} />\r\n    </StyledBoard>\r\n  );\r\n};\r\n\r\nconst StyledBoard = styled.section<{ boardWidth: number; disabled: boolean }>`\r\n  width: calc(${(props) => props.boardWidth}rem + 3rem);\r\n  height: calc(${(props) => props.boardWidth}rem + 3rem);\r\n\r\n  background: ${designVariables.palette.dark600};\r\n  margin: 2rem auto;\r\n\r\n  ${(props) => props.disabled && { pointerEvents: \"none\" }};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { designVariables } from \"../../../styles/globalVariables\";\r\n\r\ninterface ButtonProps {\r\n  color: string;\r\n  hoverColor: string;\r\n  title: string;\r\n  buttonStyle?: React.CSSProperties;\r\n  onClick?: (e: React.MouseEvent) => void;\r\n  disabledColor?: string;\r\n  disabled: boolean;\r\n}\r\nexport const OutlinedButton = (props: ButtonProps) => {\r\n  const handleClick = (e: React.MouseEvent) => {\r\n    if (props.onClick) {\r\n      props.onClick(e);\r\n    }\r\n  };\r\n  return (\r\n    <StyledButton\r\n      onClick={handleClick}\r\n      buttonStyle={props.buttonStyle}\r\n      color={props.color}\r\n      hoverColor={props.hoverColor}\r\n      disabled={props.disabled}\r\n      disabledColor={props.disabledColor}\r\n    >\r\n      {props.title}\r\n    </StyledButton>\r\n  );\r\n};\r\ntype StyledButtonProps = Omit<ButtonProps, \"title\" | \"onClick\">;\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  transition: ${designVariables.transition};\r\n  cursor: pointer;\r\n  color: ${designVariables.palette.dark800};\r\n  padding: 0.5rem 0.65rem;\r\n  text-transform: capitalize;\r\n  border-radius: 0.5rem;\r\n  font-weight: 700;\r\n  border: 1px solid ${designVariables.palette.light300};\r\n  background: ${(props) => (props.color ? props.color : \"transparent\")};\r\n  width: 100%;\r\n  ${(props) => props.buttonStyle && { ...props.buttonStyle }}\r\n\r\n  &:hover {\r\n    ${(props) => props.hoverColor && { background: props.hoverColor }};\r\n  }\r\n  &:disabled {\r\n    background: ${(props) => props.disabledColor || props.color};\r\n    cursor: default;\r\n  }\r\n`;\r\n","import React, { MouseEvent, useEffect, useState } from \"react\";\nimport { Board } from \"src/components/board/Board\";\nimport styled from \"styled-components\";\nimport { OutlinedButton } from \"./components/form/button/OutlinedButton\";\nimport { useGameContext } from \"./state/context/GameContext\";\nimport { designVariables } from \"./styles/globalVariables\";\nconst Game = () => {\n  const { onBet, onCashout, state, revealedTiles = [] } = useGameContext();\n  const [loading, setLoading] = useState(false);\n  const [action, setAction] = useState<\"bet\" | \"cashout\" | \"none\">(\"none\");\n\n  useEffect(() => {\n    if (loading) {\n      if (action === \"bet\" && onBet) {\n        onBet();\n        setAction(\"none\");\n        setLoading(false);\n        return;\n      }\n      if (action === \"cashout\" && onCashout) {\n        onCashout();\n        setLoading(false);\n        setAction(\"none\");\n        return;\n      }\n      setLoading(false);\n    }\n  }, [action, onBet, onCashout, loading]);\n\n  console.log(\"Inside game\", state);\n  const handleBet = (e: MouseEvent) => {\n    setAction(\"bet\");\n    setLoading(true);\n  };\n  const handleCashout = (e: MouseEvent) => {\n    setAction(\"cashout\");\n    setLoading(true);\n  };\n  console.log(loading, state);\n  const disableCashout =\n    loading ||\n    action === \"cashout\" ||\n    revealedTiles.length < 5 ||\n    state === \"busted\";\n  return (\n    <StyledDiv>\n      <div className=\"btn-container\">\n        <div className=\"btn-bet\">\n          <OutlinedButton\n            color={designVariables.palette.green100}\n            hoverColor={designVariables.palette.green700}\n            title=\"bet\"\n            disabled={loading || state === \"progress\"}\n            disabledColor={designVariables.palette.dark300}\n            onClick={handleBet}\n          />\n        </div>\n        <div className=\"btn-cashout\">\n          <OutlinedButton\n            color={designVariables.palette.green100}\n            hoverColor={designVariables.palette.green700}\n            title=\"cash out\"\n            disabled={disableCashout}\n            disabledColor={designVariables.palette.dark300}\n            onClick={handleCashout}\n          />\n        </div>\n      </div>\n      <Board boardWidth={25} gridMatrix={5} />\n    </StyledDiv>\n  );\n};\n\nexport default Game;\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 2rem auto;\n  .btn-container {\n    display: flex;\n    justify-content: center;\n    .btn-bet {\n      width: 10rem;\n      margin-right: 10%;\n    }\n    .btn-cashout {\n      width: 10rem;\n    }\n  }\n`;\n","import * as React from \"react\";\nimport Instructions from \"./Intructions\";\nimport Game from \"./Game\";\nimport \"./styles.css\";\nimport GlobalStyle from \"./styles/GlobalSyle\";\nimport { GameProvider } from \"./state/context/GameContext\";\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <Instructions />\n      <GameProvider>\n        <Game />\n      </GameProvider>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}